# --- 1. Secret: Redis 비밀번호를 안전하게 저장 ---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
type: Opaque
data:
  redis-password: eW91ci1yZWRpcy1wYXNzd29yZA==

---
# --- 2. PersistentVolumeClaim (PVC): 데이터 보존을 위한 디스크 공간 요청 ---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# --- 3. Deployment: Redis 컨테이너를 실행 ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      automountServiceAccountToken: false
      containers:
        - name: redis-container
          image: redis:7-alpine
          ports:
            - containerPort: 6379
          command: [ "redis-server" ]
          args: [ "--requirepass", "$(REDIS_PASSWORD)" ]
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password

          resources:
            requests:
              memory: "128Mi"
              cpu: "100m" # 0.1 vCPU
              ephemeral-storage: "1Gi"
            limits:
              memory: "256Mi"
              cpu: "200m" # 0.2 vCPU
              ephemeral-storage: "2Gi"

          volumeMounts:
            - name: redis-persistent-storage
              mountPath: /data
      volumes:
        - name: redis-persistent-storage
          persistentVolumeClaim:
            claimName: redis-pvc

---
# --- 4. Service: 'redis-service'라는 고정된 내부 주소 생성 ---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  type: NodePort
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
      nodePort: 30079
